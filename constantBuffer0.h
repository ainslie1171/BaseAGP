#ifndef _CONSTANT_BUFFER_0_
#define _CONSTANT_BUFFER_0_


#define MAX_LIGHTS 10

#include "lightManager.h"
#include "materialManager.h"





/*
struct Material
{
	/////////////////////////////////////////////////////
	XMVECTOR Emissive;					//  16 bytes   //
	//////////////////////16 bytes///////////////////////

	/////////////////////////////////////////////////////
	XMVECTOR Ambient;					//  16 bytes   //
	//////////////////////16 bytes///////////////////////

	/////////////////////////////////////////////////////
	XMVECTOR Diffuse;					//  16 bytes   //
	//////////////////////16 bytes///////////////////////

	/////////////////////////////////////////////////////
	XMVECTOR Specular;					//  16 bytes   //
	//////////////////////16 bytes///////////////////////

	/////////////////////////////////////////////////////
	float specularPower;				//   4 bytes   //
	int useTexture;						//   4 bytes   //
	int padding[2];						//   8 bytes   //
	//////////////////////16 bytes///////////////////////
};

//Const buffer structs pack to 16 bytes, make sure you always use a multiple of 16 and don't let and element overlap one of the 16 byte boundaries
struct CONSTANT_BUFFER0
{

	/////////////////////////////////////////////////
	float RedAmount;				//   4 bytes   //
	float scale;					//   4 bytes   //
	XMFLOAT2 packing_bytes;			//   8 bytes   //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewProjection;	//  64 bytes   //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMVECTOR ambient_light_colour;	//  16 bytes   //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Light directional_lights[5];	//  160 bytes  //
	//////////////////5 x 32 bytes///////////////////

	/////////////////////////////////////////////////
	Light point_lights[5];			//  160 bytes  //
	//////////////////5 x 32 bytes///////////////////
};

*/

struct MODEL_CONSTANT_BUFFER
{
	/////////////////////////////////////////////////
	XMMATRIX WorldMatrix;			//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX InvTransWorldMatrix;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewProjection;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMVECTOR cameraPosition;		//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	XMVECTOR ambient_light_colour;	//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Light lights[MAX_LIGHTS];		//  800 bytes  //
	/////////////////10 x 80 bytes///////////////////

	/////////////////////////////////////////////////
	int lightCount;					//    4 bytes  //
	int padding[3];					//   12 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Material material;				//   80 bytes  //
	////////////////////80 bytes/////////////////////
};

struct REFLECT_CONSTANT_BUFFER
{
	/////////////////////////////////////////////////
	XMMATRIX WorldMatrix;			//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewMatrix;		//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX InvTransWorldMatrix;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewProjection;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMVECTOR cameraPosition;		//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	XMVECTOR ambient_light_colour;	//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Light lights[MAX_LIGHTS];		//  800 bytes  //
	/////////////////10 x 80 bytes///////////////////

	/////////////////////////////////////////////////
	int lightCount;					//    4 bytes  //
	int padding[3];					//   12 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Material material;				//   80 bytes  //
	////////////////////80 bytes/////////////////////
};

struct TEST_CONSTANT_BUFFER
{
	/////////////////////////////////////////////////
	XMMATRIX WorldMatrix;			//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewMatrix;		//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX InvTransWorldMatrix;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMMATRIX WorldViewProjection;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////

	/////////////////////////////////////////////////
	XMVECTOR cameraPosition;		//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	XMVECTOR ambient_light_colour;	//   16 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Light lights[MAX_LIGHTS];		//  800 bytes  //
	/////////////////10 x 80 bytes///////////////////

	/////////////////////////////////////////////////
	int lightCount;					//    4 bytes  //
	int padding[3];					//   12 bytes  //
	////////////////////16 bytes/////////////////////

	/////////////////////////////////////////////////
	Material material;				//   80 bytes  //
	////////////////////80 bytes/////////////////////
};

struct SKYBOX_CONSTANT_BUFFER
{
	/////////////////////////////////////////////////
	XMMATRIX WorldViewProjection;	//   64 bytes  //
	//////////////////4 x 16 bytes///////////////////
};
#endif